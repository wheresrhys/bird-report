{"version":3,"sources":["logo.svg","lib/Context.js","lib/data-tools.js","components/Records.jsx","components/Entry.jsx","components/Season.jsx","components/Winter.jsx","components/Spring.jsx","components/Breeding.jsx","components/Trends.jsx","components/Months.jsx","components/SettingsForm.jsx","constants.js","components/Autumn.jsx","pages/BirdPage.jsx","lib/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BirdData","React","createContext","require","standardDeviation","mean","sortPropAsc","prop","a","b","sortPropDesc","asc","earliestFirst","latestFirst","getMonthsOfRecords","records","months","filter","date","includes","Date","getMonth","group","keyAlgo","lists","reduce","record","key","push","Object","values","getOutliers","list","tolerance","minResults","highLow","length","numbers","map","obj","m","sd","comparator","val","sorter","i","sort","findEarlyRecords","slice","findLateRecords","throughput","Math","round","total","numberIndex","location","max","value","flatMap","Record","dates","locations","viewMoreHeading","notes","observer","viceCounty","hasChildRecords","style","display","paddingRight","toDateString","Records","heading","initialState","useState","open","setOpen","Button","onClick","aria-controls","aria-expanded","Collapse","in","props","aggregateByDay","func","toISOString","maxNumberIndex","occasions","aggregate","EntryCard","body","Card","Header","Body","AccordionEntryCard","eventKey","Accordion","Toggle","as","variant","TableRow","content","minWidth","Entry","allowEmpty","isAccordion","index","preContent","postContent","maxCitywideDayCount","sum","numberOfSites","sites","Set","forEach","add","getNumberOfSites","highSingleSiteCounts","Table","Wrapper","MONTH_NAMES","Season","monthsToNames","defaultActiveKey","FirstWinter","distribution","breeding","SecondWinter","getEarlies","winter","earlies","getLates","breedingSites","latest","estimateThroughput","entries","name","Spring","passageMonths","unshift","Breeding","Trends","days","dayOfYear","moment","month","format","dayOfMonth","Number","axisLabel","data","Array","_","day","realRecord","find","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","minTickGap","type","allowDuplicatedCategory","stroke","fillOpacity","fill","Months","Dropdown","season","species","setDistribution","Form","Control","onChange","event","target","isNaN","clone","SettingsForm","springPassage","autumnPassage","Group","Label","Autumn","BirdContent","bird","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","useContext","clean","getBreedingSites","birdData","Tabs","Tab","title","disabled","BirdPage","useParams","getSpeciesList","set","App","speciesList","setBirdData","Provider","Navbar","bg","expand","to","ev","reader","FileReader","addEventListener","buffer","rawData","XLSX","read","cellDates","utils","sheet_to_json","Sheets","SheetNames","row","SPECIES","Location","number","NumberIndex","Notes","recordingArea","RecordingArea","ViceCounty","Sector","Observer","source","Source","loadRecords","Uint8Array","result","readAsArrayBuffer","currentTarget","files","className","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9a84114.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nexport const BirdData = React.createContext()\n","const { standardDeviation, mean } = require('simple-statistics')\n\nexport const sortPropAsc = (prop) => (a, b) => (a[prop] === b[prop] ? 0 : a[prop] > b[prop] ? 1 : -1)\n\nexport const sortPropDesc = (prop) => {\n  const asc = sortPropAsc(prop)\n  return (a, b) => -1 * asc(a, b)\n}\n\nexport const earliestFirst = sortPropAsc('date')\n\nexport const latestFirst = (...args) => -1 * earliestFirst(...args)\n\nexport const getMonthsOfRecords = (records, ...months) => records.filter(({ date }) => months.includes(new Date(date).getMonth() + 1))\n\nexport const group = (records, keyAlgo) => {\n  const lists = records.reduce((lists, record) => {\n    const key = keyAlgo(record)\n    lists[key] = lists[key] || []\n    lists[key].push(record)\n    return lists\n  }, {})\n  return Object.values(lists)\n}\n\nexport const clean = (records) => group(records, ({ date, location }) => location + date.toISOString()).map(\n  (records) => {\n    records = [...records].sort(sortPropDesc('numberIndex'))\n    return {\n      ...records[0],\n      ...(records.length > 1 ? { records } : {}),\n    }\n  },\n).sort(sortPropAsc('date'))\n\nexport const getOutliers = (\n  list,\n  prop,\n  { tolerance = 2, minResults = 1, highLow = 'high' } = {},\n) => {\n  if (!list.length) {\n    return []\n  }\n  const numbers = list.map((obj) => obj[prop])\n  const m = mean(numbers)\n  const sd = standardDeviation(numbers)\n  const comparator = highLow === 'high'\n\t\t  ? (val) => val >= m + tolerance * sd\n\t\t  : (val) => val <= m - tolerance * sd\n  const sorter = highLow === 'high' ? sortPropDesc('numberIndex') : sortPropAsc('numberIndex')\n  return list\n    .filter((obj, i) => comparator(obj[prop]) || i < minResults)\n    .sort(sorter)\n}\n\nexport const findEarlyRecords = (records) => {\n  records = [...records].sort(earliestFirst)\n  return {\n    ...records[0],\n    records: records.slice(0, 5)// getOutliers(records, 'date', { highLow: 'low' }),\n  }\n}\n\nexport const findLateRecords = (records) => {\n  records = [...records].sort(latestFirst)\n  return {\n    ...records[0],\n    records: records.slice(0, 5)// getOutliers(records, 'date'),\n  }\n}\n\nexport const throughput = (records) => {\n  records = [...records].sort(earliestFirst)\n  return {\n    'Upper bound': Math.round(records.reduce(\n      (total, { numberIndex }) => total + numberIndex,\n      0,\n    )),\n    'Lower bound': Math.round(group(records, ({ location }) => location)\n      .map((records) => Math.max(...records.map(({ numberIndex }) => numberIndex)))\n      .reduce((total, value) => total + value, 0)),\n    'Assuming each bird stays 2 days': Math.round(group(records, ({ location }) => location)\n      .flatMap((records) => records.map((record, i) => {\n      \tif (i % 2 === 1) {\n      \t\treturn {\n      \t\t\t...record,\n      \t\t\tnumberIndex: Math.max(0, record.numberIndex - records[i - 1].numberIndex)\n      \t\t}\n\t      }\n\t      return record\n\t    }))\n      .reduce((total, {numberIndex}) => total + numberIndex, 0)),\n    'Assuming each bird stays 3 days': Math.round(group(records, ({ location }) => location)\n      .flatMap((records) => records.map((record, i) => {\n      \tif (i % 3 === 1) {\n      \t\treturn {\n      \t\t\t...record,\n      \t\t\tnumberIndex: Math.max(0, record.numberIndex - records[i - 1].numberIndex)\n      \t\t}\n\t      }\n\t      if (i % 3 === 2) {\n      \t\treturn {\n      \t\t\t...record,\n      \t\t\tnumberIndex: Math.max(0, record.numberIndex - Math.max(records[i - 1].numberIndex, records[i - 2].numberIndex))\n      \t\t}\n\t      }\n\t      return record\n\t    }))\n      .reduce((total, {numberIndex}) => total + numberIndex, 0))\n  }\n}\n","import React, {useState} from 'react'\nimport { Button, Collapse} from 'react-bootstrap'\n\nexport function Record ({\n  date, dates = [date],\n  location = null, locations = [location],\n  numberIndex, records, viewMoreHeading, notes, observer, viceCounty}) {\n\n  if (records && records.length === 1) {\n    return <Record {...records[0]} />\n  }\n\n  const hasChildRecords = !!records;\n  return (\n    <>\n      <div style={{display: 'flex'}}>\n        <b style={{paddingRight: '5px'}}>\n          {numberIndex}:\n        </b>\n        <div>\n        {dates.map((date, i) => (\n          <div>\n            {locations[i] ? `${locations[i]}, ` : null}\n            {date.toDateString()}\n            {!hasChildRecords ? <span>\n              {notes ? `, ${notes}` : null}\n              {observer ? `, ${observer}` : null}\n            </span>: null}\n\n          </div>\n\n))}</div>\n\n      </div>\n      {hasChildRecords ? <Records records={records} heading={viewMoreHeading} /> : null }\n    </>\n)\n}\n\nexport function Records({initialState = false,records, heading = 'View nested records'}) {\n  const [open, setOpen] = useState(initialState)\n\n  return (\n    <>\n      {initialState === false ? <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        {heading}\n      </Button> : null}\n      {open ? (\n        <Collapse in={open}>\n          <ul>\n            {records.map(props => <li><Record {...props} /></li>)}\n          </ul>\n        </Collapse>\n)  : null}\n    </>\n  )\n}\n\n\n","import React from 'react'\nimport {Card, Button, Accordion, Table} from 'react-bootstrap'\nimport {group, getOutliers, sortPropDesc} from '../lib/data-tools'\nimport {Records, Record} from './Records'\n\nconst getNumberOfSites = records => {\n\tconst sites = new Set()\n\trecords.forEach(({location}) => sites.add(location))\n\treturn [...sites].length\n}\n\nconst aggregate = records => {\n\trecords = [...records].sort(sortPropDesc('numberIndex'))\n\tconst maxNumberIndex = records[0].numberIndex\n\tconst occasions = records.filter(({numberIndex}) => numberIndex === maxNumberIndex)\n\n\treturn {\n\t\t...records[0],\n\t\t...(occasions.length > 1 ? {\n\t\t\tdates: occasions.map(({date}) => date),\n\t\t\tlocations: occasions.map(({location}) => location)\n\t\t} : {}),\n\t\trecords: getOutliers(records, 'numberIndex')\n\t}\n}\n\nconst aggregateByDay = (func) => (records) => {\n\n\trecords = group(records, ({date}) => date.toISOString())\n\t\t.map(records => ({\n\t\t\trecords,\n\t\t\tdate: records[0].date,\n\t\t\tnumberIndex: func(records)\n\t\t}))\n\t\t.sort(sortPropDesc('numberIndex'))\n\n\t\tif (!records.length) {\n\t\t\treturn {\n\t\t\t\tnumberIndex: 0,\n\t\t\t\trecords: []\n\t\t\t}\n\t\t}\n\t\treturn aggregate(records)\n}\n\nconst EntryCard = ({heading, body}) => (\n  <Card>\n    <Card.Header>\n      {heading}\n    </Card.Header>\n    {body ? <Card.Body>{body}</Card.Body> : null}\n  </Card>\n)\n\nconst AccordionEntryCard = ({heading, body, eventKey}) => body ? (\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey={eventKey}>\n        {heading}\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey={eventKey}>\n      <Card.Body>{body}</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n) : <EntryCard heading={heading} />\n\n\nconst TableRow = ({heading, content}) => (\n  <tr>\n    <th style={{minWidth: '100px'}}>{heading}</th>\n    <td>{content}</td>\n  </tr>\n)\n\nconst MaxOrForgetIt = ({aggregate, threshold = 1}) => {\n  return aggregate.numberIndex > threshold ? <Record {...aggregate} /> : <div>Nothing of note</div>;\n}\n\nexport const Entry = ({allowEmpty = false, heading, records, isAccordion = false, index,\n  preContent = [], postContent = []}) => {\n\tif (!records.length) {\n\t\treturn allowEmpty  ?  <EntryCard heading={heading} body={null} />: null\n\t}\n\n  const maxCitywideDayCount = aggregateByDay(\nrecords => records.reduce((sum, {numberIndex}) => sum + numberIndex, 0)\n  )(records);\n\n  const numberOfSites = getNumberOfSites(records);\n  const highSingleSiteCounts = getOutliers(records, 'numberIndex');\n\tconst body = (\n  <>\n\n    <Table>\n      <tbody>\n        {preContent.map(props => <TableRow {...props} />)}\n        <TableRow\n          heading=\"Number of sites\"\n          content={numberOfSites}\n        />\n        {numberOfSites > 1 ? <TableRow\n          heading=\"Max citywide sites in day\"\n          content={(\n            <Record {...aggregateByDay(\nrecords => records.length\n  )(records)} viewMoreHeading=\"View other high counts\"\n            />\n)}\n        /> : null}\n        { maxCitywideDayCount.numberIndex > 1 ? <TableRow\n          heading=\"Max citywide day count\"\n          content={(\n            <Record {...maxCitywideDayCount} viewMoreHeading=\"View other high counts\"\n            />\n)}\n        /> : null}\n\n        {highSingleSiteCounts[0].numberIndex > 1 ? <TableRow\n          heading=\"High single site counts\"\n          content={<>\n            <Record {...highSingleSiteCounts[0]} />\n            <Records records={highSingleSiteCounts.slice(1)} heading=\"View other high counts\"/>\n           </>}\n        /> : null}\n        {postContent.map(props => <TableRow {...props} />)}\n\n      </tbody>\n    </Table>\n    <Records records={records} heading=\"View all records\" />\n  </>\n)\n\n  const Wrapper = isAccordion ? AccordionEntryCard : EntryCard\n\n\treturn <Wrapper heading={heading} body={body} eventKey={`${  index}`} />\n\n}\n\n\n\n\n\n\n","import React from 'react'\nimport {Accordion} from 'react-bootstrap'\nimport { getMonthsOfRecords } from '../lib/data-tools'\nimport {Entry, Month} from './Entry'\n\nconst MONTH_NAMES = [null, 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst monthsToNames = months => `${MONTH_NAMES[months[0]]} to ${MONTH_NAMES[months[months.length-1]]}`\n\nexport function Season ({heading, preContent, postContent, months, records}) {\nreturn (\n  <section>\n    <h2>\n      {heading}\n      {' '}\n      (\n      {monthsToNames(months)}\n      )\n    </h2>\n\n    <Accordion defaultActiveKey=\"0\">\n      <Entry isAccordion index={0} heading=\"Summary\" records={getMonthsOfRecords(records, ...months)} preContent={preContent} postContent={postContent} />\n    </Accordion>\n\n\n  </section>\n)\n}\n\n","import React from 'react'\nimport {Season} from './Season'\nimport {getMonthsOfRecords} from '../lib/data-tools'\n\nexport const FirstWinter = ({records, distribution}) => {\n\n\t// If it'springPassage not autumnPassage widespread breeder then we assume winter stretches\n\t// into March\n\tconst notWidespreadBreeder = distribution.breeding < 3\n\tconst months = notWidespreadBreeder < 3 ? [1, 2, 3] : [1, 2]\n\trecords = getMonthsOfRecords(records, ...months)\n\treturn <Season heading=\"First winter\" months={months} records={records} />\n}\n\nexport const SecondWinter = ({records, distribution}) => {\n\trecords = getMonthsOfRecords(records, 11, 12)\n\treturn <Season heading=\"Second winter\" months={[11, 12]} records={records} />\n}\n\n","import React from 'react'\nimport {throughput, getMonthsOfRecords, findLateRecords, findEarlyRecords} from '../lib/data-tools'\nimport {Season} from './Season'\nimport { Record} from './Records'\n\nconst getEarlies = ({records, distribution}) => {\n\tif (distribution.winter) return null\n\tconst earlies = findEarlyRecords(records)\n\treturn {\n\t\theading: 'Earliest',\n\t\t content: <Record {...earlies} viewMoreHeading=\"View other early records\" />\n\t}\n}\n\nconst getLates = ({records, distribution, breedingSites}) => {\n\tif (distribution.breeding > 2) return null\n\tconst latest = findLateRecords(records.filter(({location}) => !breedingSites.includes(location)))\n\treturn {\n\t\theading: distribution.breeding ? 'Latest non breeding' : 'Latest',\n\t\tcontent: <Record {...latest} viewMoreHeading=\"View other late records\" />\n\t}\n}\n\nconst estimateThroughput = ({records, distribution}) => {\n\treturn !(distribution.breeding > 2 || distribution.winter > 2) ?  {\n\t\theading: 'Estimated total throughput',\n\t\tcontent: <ul>\n  {Object.entries(throughput(records)).map(([name, value]) => (\n    <li>\n      <breeding>{name}</breeding>\n      : \n      {' '}\n      {value}\n    </li>\n))}\n</ul>\n\t} : null\n}\n\nexport const Spring = ({records, distribution, breedingSites}) => {\n\tbreedingSites = breedingSites.map(({location}) => location)\n\tconst passageMonths = [ 4, 5]\n\tif (!distribution.breeding) {\n\t\tpassageMonths.push(6)\n\t}\n\tif (!distribution.winter) {\n\t\tpassageMonths.unshift(2, 3)\n\t}\n\n\trecords = getMonthsOfRecords(records, ...passageMonths)\n\n\treturn (\n  <Season\n    heading=\"Spring passage\"\n    months={passageMonths}\n    records={records}\n    preContent={\n    \t[getEarlies({\n    \t\trecords,\n    \t\tdistribution,\n    \t})]\n    }\n    postContent={\n\t\t\t[estimateThroughput({records, distribution}), getLates({\n    \t\trecords,\n    \t\tdistribution,\n    \t\tbreedingSites\n    \t})]\n}\n  />\n)\n\n}\n\n","import React from 'react';\nimport { Card, Accordion, Button } from 'react-bootstrap'\nimport { getMonthsOfRecords, group } from '../lib/data-tools'\nimport {Records} from './Records'\n\nexport const getBreedingSites = (records, distribution) => {\n\tif (!(distribution.breeding && distribution.breeding < 3)) {\n    return [];\n  }\n\tconst breedingMonths = [5, 6]\n\trecords = getMonthsOfRecords(records, ...breedingMonths)\n\n\treturn group(records, ({location}) => location)\n\t\t.map(records => records.length > 2 ? {\n\t\t\trecords,\n\t\t\tlocation: records[0].location\n\t\t} : null)\n\t\t.filter(records => !!records)\n}\n\nexport function Breeding ({records, distribution, breedingSites}) {\n \treturn <Accordion defaultActiveKey=\"0\">\n \t{breedingSites.map(({records, location}, i) => <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey={`breeding-${i}`}>\n        {location}\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey={`breeding-${i}`}>\n      <Card.Body>\n      \t<Records records={records} initialState={true}/>\n      </Card.Body>\n    </Accordion.Collapse>\n  </Card>)}</Accordion>\n}\n\n\n","import React from 'react'\nimport {AreaChart, Area, XAxis, YAxis, Tooltip} from 'recharts';\nimport moment from 'moment';\n\nimport {group} from '../lib/data-tools'\n\nfunction CustomisedTick ({x, y, payload: {value}}) {\n\tconst [month, day] = value.split('-');\n\treturn day === '1' ? <g className=\"recharts-layer recharts-cartesian-axis-tick\">\n  <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" >{month}</text>\n</g> : null\n}\n\n\n\nexport function Trends ({records}) {\n\tconst days = group(records, ({ date }) => date.toISOString())\n\t\t.map(records => {\n\t\t\tconst locations = group(records, ({location}) => location);\n\t\t\treturn {\n\t\t\t\tdate: records[0].date,\n\t\t\t\tdayOfYear: moment(records[0].date).dayOfYear(),\n\t\t\t\tmonth:  moment(records[0].date).format('MMM'),\n\t\t\t\tdayOfMonth: Number(moment(records[0].date).format('D')),\n\t\t\t\taxisLabel:  `${moment(records[0].date).format('MMM')}-${moment(records[0].date).format('D')}`,\n\t\t\t\tlocations: locations.length,\n\t\t\t\ttotal: Math.round(locations\n\t\t\t\t.map((records) => Math.max(...records.map(({ numberIndex }) => numberIndex)))\n\t\t\t\t.reduce((total, value) => total + value, 0))\n\t\t\t}\n\t\t})\n\n\tconst data = [...Array(365)].map((_, day) => {\n\t\tconst realRecord = days.find(({dayOfYear}) => dayOfYear === day + 1);\n\t\tif (realRecord) return realRecord;\n\t\t return {\n\t\tmonth: moment().dayOfYear(day + 1).format('MMM'),\n\t\tdayOfMonth: Number(moment().dayOfYear(day + 1).format('D')),\n\t\taxisLabel:  `${moment().dayOfYear(day + 1).format('MMM')}-${moment().dayOfYear(day + 1).format('D')}`,\n\t\tlocations: 0,\n\t\ttotal: 0\n\t}\n\n\n\t})\n\n\treturn <AreaChart width={730} height={250} data={data}\n  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n  <defs>\n    <linearGradient id=\"colorLocations\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n    </linearGradient>\n    <linearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n    </linearGradient>\n  </defs>\n <XAxis dataKey=\"month\" minTickGap={28} type=\"category\" allowDuplicatedCategory={true} />\n <YAxis />\n <Tooltip/>\n  <Area type=\"monotone\" dataKey=\"locations\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorLocations)\" />\n  <Area type=\"monotone\" dataKey=\"total\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorTotal)\" />\n</AreaChart>\n}\n\n\n\n","import React from 'react'\nimport {Accordion} from 'react-bootstrap'\nimport { getMonthsOfRecords } from '../lib/data-tools'\nimport {Entry, Month} from './Entry'\n\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst monthsToNames = months => `${MONTH_NAMES[months[0]]} to ${MONTH_NAMES[months[months.length-1]]}`\n\nexport function Months ({heading, preContent, postContent, months, records}) {\nreturn (\n  <section>\n    <Accordion>\n\n      {MONTH_NAMES.map((month, index) =>\n\n        <Entry allowEmpty isAccordion index={index} heading={month} records={getMonthsOfRecords(records, index + 1)} />\n\t\t)}\n    </Accordion>\n  </section>\n)\n}\n\n","import React, { useContext} from 'react'\nimport {Form} from 'react-bootstrap'\nimport cloneDeep from 'lodash.clonedeep'\nimport {useLocalStorage} from '../lib/useLocalStorage'\n\nimport {UNKNOWN,\n VAGRANT,\n HIGHLY_LOCALISED,\n LOCALISED,\n WIDESPREAD} from '../constants'\n\nconst WINTER = 'winter'\nconst SPRING = 'springPassage'\nconst BREEDING = 'breeding'\nconst AUTUMN = 'autumnPassage'\n\nconst Dropdown = ({value, species, season, setDistribution, distribution}) => {\n\n  const updateSpecies = (event) => {\n    const value = Number(event.target.value)\n    if (isNaN(value)) {\n      const clone = {...distribution}\n      delete clone[season]\n      setDistribution(clone)\n    } else {\n      setDistribution({...distribution, [season]: value})\n    }\n\n  }\n\n  return (\n    <Form.Control as=\"select\" value={value} onChange={updateSpecies}>\n      <option value={null}>Please select</option>\n      <option value={UNKNOWN}>UNKNOWN</option>\n      <option value={VAGRANT}>VAGRANT</option>\n      <option value={HIGHLY_LOCALISED}>HIGHLY_LOCALISED</option>\n      <option value={LOCALISED}>LOCALISED</option>\n      <option value={WIDESPREAD}>WIDESPREAD</option>\n    </Form.Control>\n)\n }\n\nexport const SettingsForm = ({species, distribution, setDistribution}) => {\n\n  const {winter, springPassage, breeding, autumnPassage} = distribution\n\n  return (\n    <Form.Group>\n      <h2>{species}</h2>\n      <Form.Label>Winter</Form.Label>\n      <Dropdown value={winter} species={species} setDistribution={setDistribution} distribution={distribution} season=\"winter\" />\n      <Form.Label>Spring passage</Form.Label>\n      <Dropdown value={springPassage} species={species} setDistribution={setDistribution} distribution={distribution} season=\"springPassage\" />\n      <Form.Label>Breeding</Form.Label>\n      <Dropdown value={breeding} species={species} setDistribution={setDistribution} distribution={distribution} season=\"breeding\" />\n      <Form.Label>Autumn passage</Form.Label>\n      <Dropdown value={autumnPassage} species={species} setDistribution={setDistribution} distribution={distribution} season=\"autumnPassage\" />\n    </Form.Group>\n)\n}\n\n\n\n\n","export const UNKNOWN = 0\nexport const VAGRANT = 1\nexport const HIGHLY_LOCALISED = 2\nexport const LOCALISED = 3\nexport const WIDESPREAD = 4\n","import React from 'react'\nimport {throughput, getMonthsOfRecords, findLateRecords, findEarlyRecords} from '../lib/data-tools'\nimport {Season} from './Season'\nimport { Record} from './Records'\n\nconst getEarlies = ({records, distribution, breedingSites}) => {\n\tif (distribution.breeding > 2) return null\n\tconst earlies = findEarlyRecords(records.filter(({location}) => !breedingSites.includes(location)))\n\treturn {\n\t\theading: distribution.breeding ? 'Earliest non breeding' : 'Earliest',\n\n\n  content: <Record {...earlies} viewMoreHeading=\"View other early records\" />\n\n}\n}\n\nconst getLates = ({records, distribution}) => {\n\tif (distribution.winter) return null\n\tconst latest = findLateRecords(records)\n\treturn {heading: 'Latest',\n  content: <Record {...latest} viewMoreHeading=\"View other late records\" />\n}\n}\n\nconst estimateThroughput = ({records, distribution}) => {\n\treturn !(distribution.breeding > 2 || distribution.winter > 2) ?  {\n\t\theading: 'Estimated total throughput',\n\t\tcontent: <ul>\n  {Object.entries(throughput(records)).map(([name, value]) => (\n    <li>\n      <breeding>{name}</breeding>\n      : \n      {' '}\n      {value}\n    </li>\n))}\n</ul>\n\t} : null\n}\n\n\nexport const Autumn = ({records, distribution, breedingSites}) => {\n\tbreedingSites = breedingSites.map(({location}) => location)\n\tconst passageMonths = [7, 8, 9, 10]\n\tif (distribution.breeding < 3) {\n\t\tpassageMonths.unshift(6)\n\t}\n\tif (!distribution.winter < 2) {\n\t\tpassageMonths.push(11, 12)\n\t}\n\n\trecords = getMonthsOfRecords(records, ...passageMonths)\n\n\treturn (\n  <Season\n    heading=\"Autumn passage\"\n    months={passageMonths}\n    records={records}\n    preContent={\n    \t[getEarlies({\n    \t\trecords,\n    \t\tdistribution,\n    \t\tbreedingSites\n    \t})]\n    }\n    postContent={\n\t\t\t[estimateThroughput({records, distribution}),getLates({\n    \t\trecords,\n    \t\tdistribution,\n    \t})]\n}\n  />\n)\n}\n\n\n","import React, {useState, useEffect, useContext} from 'react'\nimport {\n  Link,\n  useParams,Redirect\n} from 'react-router-dom'\nimport {Tabs, Tab} from 'react-bootstrap'\nimport {useLocalStorage} from '../lib/useLocalStorage'\nimport { BirdData } from '../lib/Context'\nimport {FirstWinter, SecondWinter} from '../components/Winter'\nimport {Entry} from '../components/Entry'\nimport {Spring} from '../components/Spring'\nimport {Breeding, getBreedingSites} from '../components/Breeding'\nimport {Trends} from '../components/Trends'\nimport {Months} from '../components/Months'\nimport {Records} from '../components/Records'\nimport {SettingsForm} from '../components/SettingsForm'\nimport {Autumn} from '../components/Autumn'\nimport { clean} from '../lib/data-tools'\n\nconst BirdContent = ({bird}) => {\n\n  const [distribution, setDistribution] = useLocalStorage(bird, {})\n\n  const [allBirdData] = useContext(BirdData)\n\n  const records = clean(allBirdData.records.filter(({ species }) => species === bird))\n\n  const breedingSites = getBreedingSites(records, distribution)\n\n  const birdData = {records, distribution}\n\n  return (\n  <>\n    <h1>{bird}</h1>\n    <Trends {...birdData} />\n    <Tabs defaultActiveKey=\"whole-year\" id=\"uncontrolled-tab-example\">\n      <Tab eventKey=\"whole-year\" title=\"Whole year\" >\n        <Entry records={records} initialState={true} />\n      </Tab>\n      <Tab eventKey=\"months\" title=\"Individual months\">\n        <Months {...birdData} />\n        {' '}\n      </Tab>\n      <Tab eventKey=\"inner-london\" title=\"Inner London\" >\n        <Records records={records.filter(({viceCounty}) => viceCounty === 'IL')} initialState={true} />\n      </Tab>\n      <Tab eventKey=\"winter\" title=\"Winter\" disabled={!distribution.winter}>\n        {distribution.winter ? (\n          <>\n            <FirstWinter {...birdData} />\n            <SecondWinter {...birdData} />\n          </>\n) : null}\n      </Tab>\n      <Tab eventKey=\"spring\" title=\"Spring passage\" disabled={!distribution.springPassage}>\n        {distribution.springPassage ? <Spring {...birdData} breedingSites={breedingSites} /> : null}\n      </Tab>\n      <Tab eventKey=\"breeding\" title=\"Breeding\" disabled={!distribution.breeding}>\n        {distribution.breeding ? <Breeding {...birdData} breedingSites={breedingSites}/> : null}\n      </Tab>\n      <Tab eventKey=\"autumn\" title=\"Autumn passage\" disabled={!distribution.autumnPassage}>\n        {distribution.autumnPassage ? <Autumn {...birdData} breedingSites={breedingSites} /> : null}\n      </Tab>\n      <Tab eventKey=\"settings\" title=\"Settings\" >\n        <SettingsForm species={bird} distribution={distribution} setDistribution={setDistribution}/>\n      </Tab>\n    </Tabs>\n  </>\n  )\n}\n\nexport const BirdPage = () => {\n  const { bird } = useParams();\n  return <BirdContent bird={bird} />\n}\n\n","import { useState } from 'react';\n\n\n// Hook\nexport function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React, {useState} from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport logo from './logo.svg'\nimport './App.css'\n\nimport { BirdPage } from './pages/BirdPage'\nimport { Navbar } from 'react-bootstrap'\nimport { BirdData } from './lib/Context'\nimport XLSX from 'xlsx';\n\nconst loadRecords = (buffer) => {\n  const rawData = XLSX.read(buffer, {cellDates: true, type: 'array'});\n  const data = XLSX.utils.sheet_to_json(rawData.Sheets[rawData.SheetNames[0]]);\n\n  return data.map(row => ({\n    species: row.SPECIES,\n    location: row.Location,\n    date: row['Date:D'],\n    number: row.Number,\n    numberIndex: row.NumberIndex,\n    notes: row.Notes,\n    recordingArea: row.RecordingArea,\n    viceCounty: row.ViceCounty || row.Sector,\n    observer: row.Observer,\n    source: row.Source\n  }));\n}\n\nconst getSpeciesList = records => [...records.reduce((set, {species}) => set.add(species), new Set())]\n\nconst App = () => {\n\n  const [birdData, setBirdData] = useState({speciesList: [], records: []})\n\n  const onFileChange = (ev) => {\n      const reader = new FileReader();\n      reader.addEventListener('load', (event) => {\n       const records = loadRecords( new Uint8Array(reader.result))\n       setBirdData({\n         speciesList: getSpeciesList(records),\n         records\n       })\n      });\n      reader.readAsArrayBuffer(ev.currentTarget.files[0]);\n  }\n\n\n  return (\n    <BirdData.Provider value={[birdData, setBirdData]}>\n      <Router>\n        {' '}\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Link to=\"/\">Bird report tool</Link>\n        </Navbar>\n        <label>Load spreadsheet</label><input type=\"file\" name=\"load-spreadsheet\" onChange={onFileChange} />\n\n        <div className=\"container\">\n          <nav className=\"nav\">\n            {birdData.speciesList.map((bird) => (\n              <Link className=\"nav-link active\" to={`/bird-report/${bird}`}>\n                {bird}\n              </Link>\n            ))}\n          </nav>\n\n          <Switch>\n            <Route path=\"/bird-report/:bird\">\n              <BirdPage />\n            </Route>\n            <Route path=\"/\">\n            </Route>\n          </Switch>\n\n        </div>\n      </Router>\n    </BirdData.Provider>\n)\n}\n\nexport default App\n","// This optional code is used to register autumnPassage service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to autumnPassage page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n\t\t// [::1] is the IPv6 localhost address.\n\t\t|| window.location.hostname === '[::1]'\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\t|| window.location.hostname.match(\n\t\t  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on autumnPassage different origin\n      // from what our page is served on. This might happen if autumnPassage CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let'springPassage check if autumnPassage service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by autumnPassage service '\n\t\t\t\t\t\t\t+ 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n\t\t\t\t\t\t\t\t\t+ 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It'springPassage the perfect time to display autumnPassage\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting autumnPassage JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404\n\t\t\t\t|| (contentType != null\n\t\t\t\t\t&& contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably autumnPassage different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}