{"version":3,"sources":["logo.svg","lib/Context.js","lib/data-tools.js","components/Records.jsx","components/Entry.jsx","components/Season.jsx","components/Winter.jsx","components/Spring.jsx","components/Breeding.jsx","components/Trends.jsx","components/Months.jsx","components/SettingsForm.jsx","constants.js","components/Search.jsx","components/Autumn.jsx","pages/BirdPage.jsx","lib/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BirdData","React","createContext","require","standardDeviation","mean","sortPropAsc","prop","a","b","sortPropDesc","asc","earliestFirst","latestFirst","getMonthsOfRecords","records","months","filter","date","includes","Date","getMonth","group","keyAlgo","lists","reduce","record","key","push","Object","values","getOutliers","list","tolerance","minResults","highLow","length","numbers","map","obj","m","sd","comparator","val","sorter","i","sort","findEarlyRecords","slice","findLateRecords","throughput","Math","round","total","numberIndex","location","max","value","flatMap","TableRow","heading","content","DailyRecords","initiallyOpen","useState","open","setOpen","days","getDate","rs1","rs2","Button","onClick","aria-controls","aria-expanded","Collapse","in","Table","props","Record","dates","locations","viewMoreHeading","notes","observer","viceCounty","hasChildRecords","style","display","paddingRight","toDateString","Records","aggregateByDay","func","toISOString","maxNumberIndex","occasions","aggregate","EntryCard","body","Card","Header","Body","AccordionEntryCard","eventKey","Accordion","Toggle","as","variant","minWidth","Entry","allRecordsFormat","allowEmpty","isAccordion","index","preContent","postContent","maxCitywideDayCount","sum","numberOfSites","sites","Set","forEach","add","getNumberOfSites","highSingleSiteCounts","Wrapper","MONTH_NAMES","Season","monthsToNames","defaultActiveKey","FirstWinter","distribution","breeding","SecondWinter","getEarlies","winter","earlies","getLates","breedingSites","latest","estimateThroughput","entries","name","Spring","passageMonths","unshift","Breeding","Trends","dayOfYear","moment","month","format","dayOfMonth","Number","axisLabel","data","Array","_","day","realRecord","find","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","minTickGap","type","allowDuplicatedCategory","stroke","fillOpacity","fill","Months","Dropdown","season","species","setDistribution","Form","Control","onChange","event","target","isNaN","clone","SettingsForm","springPassage","autumnPassage","Group","Label","Search","results","setResults","elasticlunr","addField","setRef","doc","addDoc","placeholder","defaultValue","query","searchResults","search","ref","Autumn","BirdContent","bird","initialValue","readValue","window","item","localStorage","getItem","JSON","parse","error","console","warn","storedValue","setStoredValue","useEffect","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","useLocalStorage","useContext","rawRecords","clean","getBreedingSites","birdData","Tabs","Tab","title","disabled","BirdPage","useParams","getSpeciesList","set","App","speciesList","setBirdData","Provider","Navbar","bg","expand","to","Row","File","label","ev","reader","FileReader","buffer","rawData","XLSX","read","cellDates","utils","sheet_to_json","Sheets","SheetNames","row","SPECIES","Location","number","NumberIndex","Notes","recordingArea","RecordingArea","ViceCounty","Sector","Observer","source","Source","loadRecords","Uint8Array","result","readAsArrayBuffer","currentTarget","files","className","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60f7c4bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nexport const BirdData = React.createContext()\n","const { standardDeviation, mean } = require('simple-statistics')\n\nexport const sortPropAsc = (prop) => (a, b) => (a[prop] === b[prop] ? 0 : a[prop] > b[prop] ? 1 : -1)\n\nexport const sortPropDesc = (prop) => {\n  const asc = sortPropAsc(prop)\n  return (a, b) => -1 * asc(a, b)\n}\n\nexport const earliestFirst = sortPropAsc('date')\n\nexport const latestFirst = (...args) => -1 * earliestFirst(...args)\n\nexport const getMonthsOfRecords = (records, ...months) => records.filter(({ date }) => months.includes(new Date(date).getMonth() + 1))\n\nexport const group = (records, keyAlgo) => {\n  const lists = records.reduce((lists, record) => {\n    const key = keyAlgo(record)\n    lists[key] = lists[key] || []\n    lists[key].push(record)\n    return lists\n  }, {})\n  return Object.values(lists)\n}\n\nexport const clean = (records) => group(records, ({ date, location }) => location + date.toISOString()).map(\n  (records) => {\n    records = [...records].sort(sortPropDesc('numberIndex'))\n    return {\n      ...records[0],\n      ...(records.length > 1 ? { records } : {}),\n    }\n  },\n).sort(sortPropAsc('date'))\n\nexport const getOutliers = (\n  list,\n  prop,\n  { tolerance = 2, minResults = 1, highLow = 'high' } = {},\n) => {\n  if (!list.length) {\n    return []\n  }\n  const numbers = list.map((obj) => obj[prop])\n  const m = mean(numbers)\n  const sd = standardDeviation(numbers)\n  const comparator = highLow === 'high'\n\t\t  ? (val) => val >= m + tolerance * sd\n\t\t  : (val) => val <= m - tolerance * sd\n  const sorter = highLow === 'high' ? sortPropDesc('numberIndex') : sortPropAsc('numberIndex')\n  return list\n    .filter((obj, i) => comparator(obj[prop]) || i < minResults)\n    .sort(sorter)\n}\n\nexport const findEarlyRecords = (records) => {\n  records = [...records].sort(earliestFirst)\n  return {\n    ...records[0],\n    records: records.slice(0, 5)// getOutliers(records, 'date', { highLow: 'low' }),\n  }\n}\n\nexport const findLateRecords = (records) => {\n  records = [...records].sort(latestFirst)\n  return {\n    ...records[0],\n    records: records.slice(0, 5)// getOutliers(records, 'date'),\n  }\n}\n\nexport const throughput = (records) => {\n  records = [...records].sort(earliestFirst)\n  return {\n    'Upper bound': Math.round(records.reduce(\n      (total, { numberIndex }) => total + numberIndex,\n      0,\n    )),\n    'Lower bound': Math.round(group(records, ({ location }) => location)\n      .map((records) => Math.max(...records.map(({ numberIndex }) => numberIndex)))\n      .reduce((total, value) => total + value, 0)),\n    'Assuming each bird stays 2 days': Math.round(group(records, ({ location }) => location)\n      .flatMap((records) => records.map((record, i) => {\n      \tif (i % 2 === 1) {\n      \t\treturn {\n      \t\t\t...record,\n      \t\t\tnumberIndex: Math.max(0, record.numberIndex - records[i - 1].numberIndex)\n      \t\t}\n\t      }\n\t      return record\n\t    }))\n      .reduce((total, {numberIndex}) => total + numberIndex, 0)),\n    'Assuming each bird stays 3 days': Math.round(group(records, ({ location }) => location)\n      .flatMap((records) => records.map((record, i) => {\n      \tif (i % 3 === 1) {\n      \t\treturn {\n      \t\t\t...record,\n      \t\t\tnumberIndex: Math.max(0, record.numberIndex - records[i - 1].numberIndex)\n      \t\t}\n\t      }\n\t      if (i % 3 === 2) {\n      \t\treturn {\n      \t\t\t...record,\n      \t\t\tnumberIndex: Math.max(0, record.numberIndex - Math.max(records[i - 1].numberIndex, records[i - 2].numberIndex))\n      \t\t}\n\t      }\n\t      return record\n\t    }))\n      .reduce((total, {numberIndex}) => total + numberIndex, 0))\n  }\n}\n","import React, {useState} from 'react'\nimport { Button, Collapse, Table} from 'react-bootstrap'\nimport {group} from '../lib/data-tools'\nconst TableRow = ({heading, content}) => (\n  <tr>\n    <th>{heading}</th>\n    <td>{content}</td>\n  </tr>\n)\n\nexport function DailyRecords ({initiallyOpen = false,heading, records}) {\n  const [open, setOpen] = useState(initiallyOpen)\n  const days = group(records, ({date}) => date.getDate())\n    .sort((rs1, rs2) => {\n      return rs1[0].date > rs2[0].date ? 1 : rs1[0].date < rs2[0].date ? -1 : 0;\n    })\n\n  return  (\n      <>\n        {initiallyOpen === false ? <Button\n          onClick={() => setOpen(!open)}\n          aria-controls=\"example-collapse-text\"\n          aria-expanded={open}\n        >\n          {heading}\n        </Button> : null}\n        {open ? (\n          <Collapse in={open}>\n            <Table>\n              <tbody>\n              {days.map(records =>\n                <TableRow\n                  heading={records[0].date.getDate()}\n                  content={<ul>\n\n              {records.map(props => <li><Record {...props} /></li>)}\n            </ul>}\n                />)}\n              </tbody>\n            </Table>\n\n\n          </Collapse>\n  )  : null}\n      </>\n    )\n}\n\nexport function Record ({\n  date, dates = [date],\n  location = null, locations = [location],\n  numberIndex, records, viewMoreHeading, notes, observer, viceCounty}) {\n\n  if (records && records.length === 1) {\n    return <Record {...records[0]} />\n  }\n\n  const hasChildRecords = !!records;\n  return (\n    <>\n      <div style={{display: 'flex'}}>\n        <b style={{paddingRight: '5px'}}>\n          {numberIndex}:\n        </b>\n        <div>\n        <b>{viceCounty}</b>\n        {dates.map((date, i) => (\n          <div>\n            {locations[i] ? `${locations[i]}, ` : null}\n            {date.toDateString()}\n            {!hasChildRecords ? <span>\n              {notes ? `, ${notes}` : null}\n              {observer ? `, ${observer}` : null}\n            </span>: null}\n\n          </div>\n\n))}</div>\n\n      </div>\n      {hasChildRecords ? <Records records={records} heading={viewMoreHeading} /> : null }\n    </>\n)\n}\n\nexport function Records({initiallyOpen = false,records, heading = 'View nested records'}) {\n  const [open, setOpen] = useState(initiallyOpen)\n\n  return (\n    <>\n      {initiallyOpen === false ? <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        {heading}\n      </Button> : null}\n      {open ? (\n        <Collapse in={open}>\n          <ul>\n            {records.map(props => <li><Record {...props} /></li>)}\n          </ul>\n        </Collapse>\n)  : null}\n    </>\n  )\n}\n\n\n","import React from 'react'\nimport {Card, Button, Accordion, Table} from 'react-bootstrap'\nimport {group, getOutliers, sortPropDesc} from '../lib/data-tools'\nimport {DailyRecords, Records, Record} from './Records'\n\nconst getNumberOfSites = records => {\n\tconst sites = new Set()\n\trecords.forEach(({location}) => sites.add(location))\n\treturn [...sites].length\n}\n\nconst aggregate = records => {\n\trecords = [...records].sort(sortPropDesc('numberIndex'))\n\tconst maxNumberIndex = records[0].numberIndex\n\tconst occasions = records.filter(({numberIndex}) => numberIndex === maxNumberIndex)\n\n\treturn {\n\t\t...records[0],\n\t\t...(occasions.length > 1 ? {\n\t\t\tdates: occasions.map(({date}) => date),\n\t\t\tlocations: occasions.map(({location}) => location)\n\t\t} : {}),\n\t\trecords: getOutliers(records, 'numberIndex')\n\t}\n}\n\nconst aggregateByDay = (func) => (records) => {\n\n\trecords = group(records, ({date}) => date.toISOString())\n\t\t.map(records => ({\n\t\t\trecords,\n\t\t\tdate: records[0].date,\n\t\t\tnumberIndex: func(records)\n\t\t}))\n\t\t.sort(sortPropDesc('numberIndex'))\n\n\t\tif (!records.length) {\n\t\t\treturn {\n\t\t\t\tnumberIndex: 0,\n\t\t\t\trecords: []\n\t\t\t}\n\t\t}\n\t\treturn aggregate(records)\n}\n\nconst EntryCard = ({heading, body}) => (\n  <Card>\n    <Card.Header>\n      {heading}\n    </Card.Header>\n    {body ? <Card.Body>{body}</Card.Body> : null}\n  </Card>\n)\n\nconst AccordionEntryCard = ({heading, body, eventKey}) => body ? (\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey={eventKey}>\n        {heading}\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey={eventKey}>\n      <Card.Body>{body}</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n) : <EntryCard heading={heading} />\n\n\nconst TableRow = ({heading, content}) => (\n  <tr>\n    <th style={{minWidth: '100px'}}>{heading}</th>\n    <td>{content}</td>\n  </tr>\n)\n\nconst MaxOrForgetIt = ({aggregate, threshold = 1}) => {\n  return aggregate.numberIndex > threshold ? <Record {...aggregate} /> : <div>Nothing of note</div>;\n}\n\nexport const Entry = ({allRecordsFormat = \"list\", allowEmpty = false, heading, records, isAccordion = false, index,\n  preContent = [], postContent = []}) => {\n\tif (!records.length) {\n\t\treturn allowEmpty  ?  <EntryCard heading={heading} body={null} />: null\n\t}\n\n  const maxCitywideDayCount = aggregateByDay(\nrecords => records.reduce((sum, {numberIndex}) => sum + numberIndex, 0)\n  )(records);\n\n  const numberOfSites = getNumberOfSites(records);\n  const highSingleSiteCounts = getOutliers(records, 'numberIndex');\n\tconst body = (\n  <>\n\n    <Table>\n      <tbody>\n        {preContent.map(props => <TableRow {...props} />)}\n        <TableRow\n          heading=\"Number of sites\"\n          content={numberOfSites}\n        />\n        {numberOfSites > 1 ? <TableRow\n          heading=\"Max citywide sites in day\"\n          content={(\n            <Record {...aggregateByDay(\nrecords => records.length\n  )(records)} viewMoreHeading=\"View other high counts\"\n            />\n)}\n        /> : null}\n        { maxCitywideDayCount.numberIndex > 1 ? <TableRow\n          heading=\"Max citywide day count\"\n          content={(\n            <Record {...maxCitywideDayCount} viewMoreHeading=\"View other high counts\"\n            />\n)}\n        /> : null}\n\n        {highSingleSiteCounts[0].numberIndex > 1 ? <TableRow\n          heading=\"High single site counts\"\n          content={<>\n            <Record {...highSingleSiteCounts[0]} />\n            <Records records={highSingleSiteCounts.slice(1)} heading=\"View other high counts\"/>\n           </>}\n        /> : null}\n        {postContent.map(props => <TableRow {...props} />)}\n\n      </tbody>\n    </Table>\n    {allRecordsFormat === 'daily' ? <DailyRecords records={records} heading=\"View all records\" /> : <Records records={records} heading=\"View all records\" />}\n  </>\n)\n\n  const Wrapper = isAccordion ? AccordionEntryCard : EntryCard\n\n\treturn <Wrapper heading={heading} body={body} eventKey={`${  index}`} />\n\n}\n\n\n\n\n\n\n","import React from 'react'\nimport {Accordion} from 'react-bootstrap'\nimport { getMonthsOfRecords } from '../lib/data-tools'\nimport {Entry, Month} from './Entry'\n\nconst MONTH_NAMES = [null, 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst monthsToNames = months => `${MONTH_NAMES[months[0]]} to ${MONTH_NAMES[months[months.length-1]]}`\n\nexport function Season ({heading, preContent, postContent, months, records}) {\nreturn (\n  <section>\n    <h2>\n      {heading}\n      {' '}\n      (\n      {monthsToNames(months)}\n      )\n    </h2>\n\n    <Accordion defaultActiveKey=\"0\">\n      <Entry isAccordion index={0} heading=\"Summary\" records={getMonthsOfRecords(records, ...months)} preContent={preContent} postContent={postContent} />\n    </Accordion>\n\n\n  </section>\n)\n}\n\n","import React from 'react'\nimport {Season} from './Season'\nimport {getMonthsOfRecords} from '../lib/data-tools'\n\nexport const FirstWinter = ({records, distribution}) => {\n\n\t// If it'springPassage not autumnPassage widespread breeder then we assume winter stretches\n\t// into March\n\tconst notWidespreadBreeder = distribution.breeding < 3\n\tconst months = notWidespreadBreeder < 3 ? [1, 2, 3] : [1, 2]\n\trecords = getMonthsOfRecords(records, ...months)\n\treturn <Season heading=\"First winter\" months={months} records={records} />\n}\n\nexport const SecondWinter = ({records, distribution}) => {\n\trecords = getMonthsOfRecords(records, 11, 12)\n\treturn <Season heading=\"Second winter\" months={[11, 12]} records={records} />\n}\n\n","import React from 'react'\nimport {throughput, getMonthsOfRecords, findLateRecords, findEarlyRecords} from '../lib/data-tools'\nimport {Season} from './Season'\nimport { Record} from './Records'\n\nconst getEarlies = ({records, distribution}) => {\n\tif (distribution.winter) return null\n\tconst earlies = findEarlyRecords(records)\n\treturn {\n\t\theading: 'Earliest',\n\t\t content: <Record {...earlies} viewMoreHeading=\"View other early records\" />\n\t}\n}\n\nconst getLates = ({records, distribution, breedingSites}) => {\n\tif (distribution.breeding > 2) return null\n\tconst latest = findLateRecords(records.filter(({location}) => !breedingSites.includes(location)))\n\treturn {\n\t\theading: distribution.breeding ? 'Latest non breeding' : 'Latest',\n\t\tcontent: <Record {...latest} viewMoreHeading=\"View other late records\" />\n\t}\n}\n\nconst estimateThroughput = ({records, distribution}) => {\n\treturn !(distribution.breeding > 2 || distribution.winter > 2) ?  {\n\t\theading: 'Estimated total throughput',\n\t\tcontent: <ul>\n  {Object.entries(throughput(records)).map(([name, value]) => (\n    <li>\n      <b>{name}</b>\n      :\n      {' '}\n      {value}\n    </li>\n))}\n</ul>\n\t} : null\n}\n\nexport const Spring = ({records, distribution, breedingSites}) => {\n\tbreedingSites = breedingSites.map(({location}) => location)\n\tconst passageMonths = [ 4, 5]\n\tif (!distribution.breeding) {\n\t\tpassageMonths.push(6)\n\t}\n\tif (!distribution.winter) {\n\t\tpassageMonths.unshift(2, 3)\n\t}\n\n\trecords = getMonthsOfRecords(records, ...passageMonths)\n\n\treturn (\n  <Season\n    heading=\"Spring passage\"\n    months={passageMonths}\n    records={records}\n    preContent={\n    \t[getEarlies({\n    \t\trecords,\n    \t\tdistribution,\n    \t})]\n    }\n    postContent={\n\t\t\t[estimateThroughput({records, distribution}), getLates({\n    \t\trecords,\n    \t\tdistribution,\n    \t\tbreedingSites\n    \t})]\n}\n  />\n)\n\n}\n\n","import React from 'react';\nimport { Card, Accordion, Button } from 'react-bootstrap'\nimport { getMonthsOfRecords, group } from '../lib/data-tools'\nimport {Records} from './Records'\n\nexport const getBreedingSites = (records, distribution) => {\n\tif (!(distribution.breeding && distribution.breeding < 3)) {\n    return [];\n  }\n\tconst breedingMonths = [5, 6]\n\trecords = getMonthsOfRecords(records, ...breedingMonths)\n\n\treturn group(records, ({location}) => location)\n\t\t.map(records => records.length > 2 ? {\n\t\t\trecords,\n\t\t\tlocation: records[0].location\n\t\t} : null)\n\t\t.filter(records => !!records)\n}\n\nexport function Breeding ({records, distribution, breedingSites}) {\n \treturn <Accordion defaultActiveKey=\"0\">\n \t{breedingSites.map(({records, location}, i) => <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey={`breeding-${i}`}>\n        {location}\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey={`breeding-${i}`}>\n      <Card.Body>\n      \t<Records records={records} initiallyOpen={true}/>\n      </Card.Body>\n    </Accordion.Collapse>\n  </Card>)}</Accordion>\n}\n\n\n","import React from 'react'\nimport {AreaChart, Area, XAxis, YAxis, Tooltip} from 'recharts';\nimport moment from 'moment';\n\nimport {group} from '../lib/data-tools'\n\nfunction CustomisedTick ({x, y, payload: {value}}) {\n\tconst [month, day] = value.split('-');\n\treturn day === '1' ? <g className=\"recharts-layer recharts-cartesian-axis-tick\">\n  <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" >{month}</text>\n</g> : null\n}\n\n\n\nexport function Trends ({records}) {\n\tconst days = group(records, ({ date }) => date.toISOString())\n\t\t.map(records => {\n\t\t\tconst locations = group(records, ({location}) => location);\n\t\t\treturn {\n\t\t\t\tdate: records[0].date,\n\t\t\t\tdayOfYear: moment(records[0].date).dayOfYear(),\n\t\t\t\tmonth:  moment(records[0].date).format('MMM'),\n\t\t\t\tdayOfMonth: Number(moment(records[0].date).format('D')),\n\t\t\t\taxisLabel:  moment(records[0].date).format('MMM-D'),\n\t\t\t\tlocations: locations.length,\n\t\t\t\ttotal: Math.round(locations\n\t\t\t\t.map((records) => Math.max(...records.map(({ numberIndex }) => numberIndex)))\n\t\t\t\t.reduce((total, value) => total + value, 0))\n\t\t\t}\n\t\t})\n\n\tconst data = [...Array(365)].map((_, day) => {\n\t\tconst realRecord = days.find(({dayOfYear}) => dayOfYear === day + 1);\n\t\tif (realRecord) return realRecord;\n\t\t return {\n\t\tmonth: moment().dayOfYear(day + 1).format('MMM'),\n\t\tdayOfMonth: Number(moment().dayOfYear(day + 1).format('D')),\n\t\taxisLabel:  moment().dayOfYear(day + 1).format('MMM-D'),\n\t\tlocations: 0,\n\t\ttotal: 0\n\t}\n\n\n\t})\n\n\treturn <AreaChart width={730} height={250} data={data}\n  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n  <defs>\n    <linearGradient id=\"colorLocations\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n    </linearGradient>\n    <linearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n    </linearGradient>\n  </defs>\n <XAxis dataKey=\"axisLabel\" minTickGap={28} type=\"category\" allowDuplicatedCategory={true} />\n <YAxis />\n <Tooltip/>\n  <Area type=\"monotone\" dataKey=\"locations\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorLocations)\" />\n  <Area type=\"monotone\" dataKey=\"total\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorTotal)\" />\n</AreaChart>\n}\n\n\n\n","import React from 'react'\nimport {Accordion} from 'react-bootstrap'\nimport { getMonthsOfRecords } from '../lib/data-tools'\nimport {Entry, Month} from './Entry'\n\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst monthsToNames = months => `${MONTH_NAMES[months[0]]} to ${MONTH_NAMES[months[months.length-1]]}`\n\nexport function Months ({heading, preContent, postContent, months, records}) {\nreturn (\n  <section>\n    <Accordion>\n\n      {MONTH_NAMES.map((month, index) =>\n\n        <Entry allowEmpty isAccordion index={index} heading={month} records={getMonthsOfRecords(records, index + 1)} allRecordsFormat=\"daily\"/>\n\t\t)}\n    </Accordion>\n  </section>\n)\n}\n\n","import React, { useContext} from 'react'\nimport {Form} from 'react-bootstrap'\nimport cloneDeep from 'lodash.clonedeep'\nimport {useLocalStorage} from '../lib/useLocalStorage'\n\nimport {UNKNOWN,\n VAGRANT,\n HIGHLY_LOCALISED,\n LOCALISED,\n WIDESPREAD} from '../constants'\n\nconst WINTER = 'winter'\nconst SPRING = 'springPassage'\nconst BREEDING = 'breeding'\nconst AUTUMN = 'autumnPassage'\n\nconst Dropdown = ({value, species, season, setDistribution, distribution}) => {\n\n  const updateSpecies = (event) => {\n    const value = Number(event.target.value)\n    if (isNaN(value)) {\n      const clone = {...distribution}\n      delete clone[season]\n      setDistribution(clone)\n    } else {\n      setDistribution({...distribution, [season]: value})\n    }\n\n  }\n\n  return (\n    <Form.Control as=\"select\" value={value} onChange={updateSpecies}>\n      <option value={null}>Please select</option>\n      <option value={UNKNOWN}>UNKNOWN</option>\n      <option value={VAGRANT}>VAGRANT</option>\n      <option value={HIGHLY_LOCALISED}>HIGHLY_LOCALISED</option>\n      <option value={LOCALISED}>LOCALISED</option>\n      <option value={WIDESPREAD}>WIDESPREAD</option>\n    </Form.Control>\n)\n }\n\nexport const SettingsForm = ({species, distribution, setDistribution}) => {\n\n  const {winter, springPassage, breeding, autumnPassage} = distribution\n\n  return (\n    <Form.Group>\n      <h2>{species}</h2>\n      <Form.Label>Winter</Form.Label>\n      <Dropdown value={winter} species={species} setDistribution={setDistribution} distribution={distribution} season=\"winter\" />\n      <Form.Label>Spring passage</Form.Label>\n      <Dropdown value={springPassage} species={species} setDistribution={setDistribution} distribution={distribution} season=\"springPassage\" />\n      <Form.Label>Breeding</Form.Label>\n      <Dropdown value={breeding} species={species} setDistribution={setDistribution} distribution={distribution} season=\"breeding\" />\n      <Form.Label>Autumn passage</Form.Label>\n      <Dropdown value={autumnPassage} species={species} setDistribution={setDistribution} distribution={distribution} season=\"autumnPassage\" />\n    </Form.Group>\n)\n}\n\n\n\n\n","export const UNKNOWN = 0\nexport const VAGRANT = 1\nexport const HIGHLY_LOCALISED = 2\nexport const LOCALISED = 3\nexport const WIDESPREAD = 4\n","import React, {useState} from 'react';\nimport elasticlunr from 'elasticlunr'\nimport { Form } from 'react-bootstrap'\nimport {Records} from './Records';\n\nexport function Search ({records}) {\n\tconst [results, setResults] = useState([]);\n\n\tconst index = elasticlunr();\n\tindex.addField('notes');\n  index.addField('location');\n  index.setRef('id');\n\n\trecords.forEach((doc, id) =>\n\t\tindex.addDoc({...doc, id})\n\t)\n\n\tconst search = event => {\n\t\tconst query = event.target.value;\n\t\tconst searchResults = index.search(query).map(({ref}) => Number(ref))\n\t\tsetResults(searchResults.map(i => records[i]))\n\t}\n\n\treturn <div>\n\t<Form.Control placeholder=\"Search for whole words\" as=\"input\" defaultValue=\"\" onChange={search} />\n\t<Records records={results} initiallyOpen={true}/>\n</div>\n}\n","import React from 'react'\nimport {throughput, getMonthsOfRecords, findLateRecords, findEarlyRecords} from '../lib/data-tools'\nimport {Season} from './Season'\nimport { Record} from './Records'\n\nconst getEarlies = ({records, distribution, breedingSites}) => {\n\tif (distribution.breeding > 2) return null\n\tconst earlies = findEarlyRecords(records.filter(({location}) => !breedingSites.includes(location)))\n\treturn {\n\t\theading: distribution.breeding ? 'Earliest non breeding' : 'Earliest',\n\n\n  content: <Record {...earlies} viewMoreHeading=\"View other early records\" />\n\n}\n}\n\nconst getLates = ({records, distribution}) => {\n\tif (distribution.winter) return null\n\tconst latest = findLateRecords(records)\n\treturn {heading: 'Latest',\n  content: <Record {...latest} viewMoreHeading=\"View other late records\" />\n}\n}\n\nconst estimateThroughput = ({records, distribution}) => {\n\treturn !(distribution.breeding > 2 || distribution.winter > 2) ?  {\n\t\theading: 'Estimated total throughput',\n\t\tcontent: <ul>\n  {Object.entries(throughput(records)).map(([name, value]) => (\n    <li>\n      <breeding>{name}</breeding>\n      : \n      {' '}\n      {value}\n    </li>\n))}\n</ul>\n\t} : null\n}\n\n\nexport const Autumn = ({records, distribution, breedingSites}) => {\n\tbreedingSites = breedingSites.map(({location}) => location)\n\tconst passageMonths = [7, 8, 9, 10]\n\tif (distribution.breeding < 3) {\n\t\tpassageMonths.unshift(6)\n\t}\n\tif (!distribution.winter < 2) {\n\t\tpassageMonths.push(11, 12)\n\t}\n\n\trecords = getMonthsOfRecords(records, ...passageMonths)\n\n\treturn (\n  <Season\n    heading=\"Autumn passage\"\n    months={passageMonths}\n    records={records}\n    preContent={\n    \t[getEarlies({\n    \t\trecords,\n    \t\tdistribution,\n    \t\tbreedingSites\n    \t})]\n    }\n    postContent={\n\t\t\t[estimateThroughput({records, distribution}),getLates({\n    \t\trecords,\n    \t\tdistribution,\n    \t})]\n}\n  />\n)\n}\n\n\n","import React, {useState, useEffect, useContext} from 'react'\nimport {\n  Link,\n  useParams,Redirect\n} from 'react-router-dom'\nimport {Tabs, Tab} from 'react-bootstrap'\nimport {useLocalStorage} from '../lib/useLocalStorage'\nimport { BirdData } from '../lib/Context'\nimport {FirstWinter, SecondWinter} from '../components/Winter'\nimport {Entry} from '../components/Entry'\nimport {Spring} from '../components/Spring'\nimport {Breeding, getBreedingSites} from '../components/Breeding'\nimport {Trends} from '../components/Trends'\nimport {Months} from '../components/Months'\nimport {Records} from '../components/Records'\nimport {SettingsForm} from '../components/SettingsForm'\nimport {Search} from '../components/Search'\nimport {Autumn} from '../components/Autumn'\nimport { clean} from '../lib/data-tools'\n\nconst BirdContent = ({bird}) => {\n\n  const [distribution, setDistribution] = useLocalStorage(bird, {})\n\n  const [allBirdData] = useContext(BirdData)\n  const rawRecords = allBirdData.records.filter(({ species }) => species === bird);\n  const records = clean(rawRecords);\n\n  const breedingSites = getBreedingSites(records, distribution)\n\n  const birdData = {records, distribution}\n\n  return (\n  <>\n    <h1>{bird}</h1>\n    <Trends {...birdData} />\n    <Tabs defaultActiveKey=\"whole-year\" id=\"uncontrolled-tab-example\">\n      <Tab eventKey=\"whole-year\" title=\"Whole year\" >\n        <Entry records={records} initiallyOpen={true} />\n      </Tab>\n      <Tab eventKey=\"months\" title=\"Individual months\">\n        <Months {...birdData} />\n        {' '}\n      </Tab>\n      <Tab eventKey=\"inner-london\" title=\"Inner London\" >\n        <Records records={records.filter(({viceCounty}) => viceCounty === 'IL')} initiallyOpen={true} />\n      </Tab>\n      <Tab eventKey=\"winter\" title=\"Winter\" disabled={!distribution.winter}>\n        {distribution.winter ? (\n          <>\n            <FirstWinter {...birdData} />\n            <SecondWinter {...birdData} />\n          </>\n) : null}\n      </Tab>\n      <Tab eventKey=\"spring\" title=\"Spring passage\" disabled={!distribution.springPassage}>\n        {distribution.springPassage ? <Spring {...birdData} breedingSites={breedingSites} /> : null}\n      </Tab>\n      <Tab eventKey=\"breeding\" title=\"Breeding\" disabled={!distribution.breeding}>\n        {distribution.breeding ? <Breeding {...birdData} breedingSites={breedingSites}/> : null}\n      </Tab>\n      <Tab eventKey=\"autumn\" title=\"Autumn passage\" disabled={!distribution.autumnPassage}>\n        {distribution.autumnPassage ? <Autumn {...birdData} breedingSites={breedingSites} /> : null}\n      </Tab>\n      <Tab eventKey=\"search\" title=\"Search\" >\n        <Search records={rawRecords}/>\n      </Tab>\n      <Tab eventKey=\"settings\" title=\"Settings\" >\n        <SettingsForm species={bird} distribution={distribution} setDistribution={setDistribution}/>\n      </Tab>\n    </Tabs>\n  </>\n  )\n}\n\nexport const BirdPage = () => {\n  const { bird } = useParams();\n  return <BirdContent bird={bird} />\n}\n\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage (key, initialValue) {\n\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = () => {\n\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(readValue)\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n      // Save state\n      setStoredValue(newValue)\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n  // Read latest value from LocalStorage on hook mount\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [key])\n  // Keep all instances hook sync\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [key])\n  return [storedValue, setValue]\n}\n","import React, {useState} from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport logo from './logo.svg'\nimport './App.css'\n\nimport { BirdPage } from './pages/BirdPage'\nimport { Navbar, Form } from 'react-bootstrap'\nimport { BirdData } from './lib/Context'\nimport XLSX from 'xlsx';\n\nconst loadRecords = (buffer) => {\n  const rawData = XLSX.read(buffer, {cellDates: true, type: 'array'});\n  const data = XLSX.utils.sheet_to_json(rawData.Sheets[rawData.SheetNames[0]]);\n\n  return data.map(row => ({\n    species: row.SPECIES,\n    location: row.Location,\n    date: row['Date:D'],\n    number: row.Number,\n    numberIndex: row.NumberIndex,\n    notes: row.Notes,\n    recordingArea: row.RecordingArea,\n    viceCounty: row.ViceCounty || row.Sector,\n    observer: row.Observer,\n    source: row.Source\n  }));\n}\n\nconst getSpeciesList = records => [...records.reduce((set, {species}) => set.add(species), new Set())]\n\nconst App = () => {\n\n  const [birdData, setBirdData] = useState({speciesList: [], records: []})\n\n  const onFileChange = (ev) => {\n      const reader = new FileReader();\n      reader.addEventListener('load', (event) => {\n       const records = loadRecords( new Uint8Array(reader.result))\n       setBirdData({\n         speciesList: getSpeciesList(records),\n         records\n       })\n      });\n      reader.readAsArrayBuffer(ev.currentTarget.files[0]);\n  }\n\n\n  return (\n    <BirdData.Provider value={[birdData, setBirdData]}>\n      <Router>\n        {' '}\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Link to=\"/\">Bird report tool</Link>\n        </Navbar>\n        <Form><Form.Row>\n          <Form.File\n            id=\"custom-file\"\n            label=\"Load spreadsheet\"\n            onChange={onFileChange}\n          /></Form.Row>\n        </Form>\n        <div className=\"container\">\n          <nav className=\"nav\">\n            {birdData.speciesList.map((bird) => (\n              <Link className=\"nav-link active\" to={`/bird-report/${bird}`}>\n                {bird}\n              </Link>\n            ))}\n          </nav>\n\n          <Switch>\n            <Route path=\"/bird-report/:bird\">\n              <BirdPage />\n            </Route>\n            <Route path=\"/\">\n            </Route>\n          </Switch>\n\n        </div>\n      </Router>\n    </BirdData.Provider>\n)\n}\n\nexport default App\n","// This optional code is used to register autumnPassage service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to autumnPassage page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n\t\t// [::1] is the IPv6 localhost address.\n\t\t|| window.location.hostname === '[::1]'\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\t|| window.location.hostname.match(\n\t\t  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on autumnPassage different origin\n      // from what our page is served on. This might happen if autumnPassage CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let'springPassage check if autumnPassage service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by autumnPassage service '\n\t\t\t\t\t\t\t+ 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n\t\t\t\t\t\t\t\t\t+ 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It'springPassage the perfect time to display autumnPassage\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting autumnPassage JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404\n\t\t\t\t|| (contentType != null\n\t\t\t\t\t&& contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably autumnPassage different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}